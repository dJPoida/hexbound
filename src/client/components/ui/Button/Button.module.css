.button {
  position: relative;
  border: none;
  outline: none;
  background: transparent;
  padding: 0;
  cursor: pointer;
  display: inline-flex;
  align-items: center;
  justify-content: center;
  font-family: var(--font-button);
  font-size: var(--font-size-lg);
  font-weight: 700;
  text-transform: uppercase;
  line-height: 1.2;
  transition: opacity 0.15s ease-in-out;
  min-width: var(--button-width, 100px);
  height: var(--button-height, 50px);
  min-height: var(--button-height, 50px);

  /* Prevent touch/tap highlighting and selection */
  user-select: none;
  -webkit-user-select: none;
  -moz-user-select: none;
  -webkit-tap-highlight-color: transparent;
  -webkit-touch-callout: none;
  touch-action: manipulation;
}

.button.measuring {
  opacity: 0;
  pointer-events: none;
}

.buttonSvg {
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: var(--button-height, 50px);
  pointer-events: none;
  z-index: 0;
  user-select: none;
  overflow: visible;
}

.buttonText {
  position: relative;
  z-index: 1;
  padding: 0 6px;
  white-space: nowrap;
  text-shadow: 2px 2px 1px var(--text-shadow-dark);
  line-height: 1;
  user-select: none;
}

.buttonIcon {
  position: relative;
  z-index: 1;
  user-select: none;
  flex-shrink: 0;
  filter: drop-shadow(2px 2px 1px var(--text-shadow-dark));
}

/* Icon positioning for buttons with both text and icon */
.button:not(.icon) .buttonIcon {
  margin: 0 4px;
}

.button:not(.icon) .buttonIcon:first-child {
  margin-left: 0;
}

.button:not(.icon) .buttonIcon:last-child {
  margin-right: 0;
}

/* Button States */
.button:hover:not(.disabled) {
  filter: brightness(1.1);
}

.button:active:not(.disabled) {
  filter: brightness(0.95);
}

.button:active:not(.disabled) .buttonText,
.button:active:not(.disabled) .buttonIcon {
  transform: translate(1px, 1px);
}

.button:focus:not(.disabled) .outline {
  stroke: var(--color-charcoal-highlight);
}

/* Active state - invert gem lighting for pressed effect */
.button:active:not(.disabled) .leftEdge,
.button:active:not(.disabled) .rightEdge,
.button:active:not(.disabled) .topEdge {
  fill: var(--variant-dark);
}

.button:active:not(.disabled) .bottomEdge {
  fill: var(--variant-light);
}

.button.disabled {
  cursor: not-allowed;
  opacity: 0.7;
  filter: grayscale(0.5);
}

.button.disabled .buttonText {
  color: var(--color-stone-grey-light);
  text-shadow: 0 1px 0px var(--text-shadow-light);
}

.button.disabled .buttonIcon {
  filter: drop-shadow(0 1px 0px var(--text-shadow-light));
}

.button.disabled .disabledIcon {
  color: var(--color-stone-grey-light) !important;
}

/* Base SVG Element Styles */
.background,
.leftEdge,
.rightEdge,
.topEdge,
.bottomEdge,
.accents {
  stroke: none;
}

.outline {
  fill: none;
  stroke-width: 1;
  stroke-linecap: butt;
  stroke-linejoin: bevel;
  stroke-opacity: 1;
}

/* Variant Definitions (Function/Layout) */
.standard {
  /* Standard gem button - uses default sizing */
}

.icon {
  /* Icon button - square, fixed width */
  min-width: 50px;
  width: 50px !important;
  padding: 0;
}

/* Color Definitions (Appearance) - Using Actual Color Names */
.default {
  --variant-base: var(--color-default);
  --variant-light: var(--color-default-light);
  --variant-dark: var(--color-default-dark);
  --variant-highlight: var(--color-default-highlight);
}

.default .background {
  fill: var(--variant-base);
}
.default .leftEdge,
.default .rightEdge,
.default .topEdge {
  fill: var(--variant-light);
}
.default .bottomEdge {
  fill: var(--variant-dark);
}
.default .accents {
  fill: var(--variant-highlight);
}
.default .buttonText {
  color: var(--color-canvas-white);
}
.default .outline {
  stroke: var(--color-charcoal);
}

.amber {
  --variant-base: var(--color-amber);
  --variant-light: var(--color-amber-light);
  --variant-dark: var(--color-amber-dark);
  --variant-highlight: var(--color-amber-highlight);
}

.amber .background {
  fill: var(--variant-base);
}
.amber .leftEdge,
.amber .rightEdge,
.amber .topEdge {
  fill: var(--variant-light);
}
.amber .bottomEdge {
  fill: var(--variant-dark);
}
.amber .accents {
  fill: var(--variant-highlight);
}
.amber .buttonText {
  color: var(--color-canvas-white);
}
.amber .outline {
  stroke: var(--color-charcoal);
}

.blue {
  --variant-base: var(--color-blue);
  --variant-light: var(--color-blue-light);
  --variant-dark: var(--color-blue-dark);
  --variant-highlight: var(--color-blue-highlight);
}

.blue .background {
  fill: var(--variant-base);
}
.blue .leftEdge,
.blue .rightEdge,
.blue .topEdge {
  fill: var(--variant-light);
}
.blue .bottomEdge {
  fill: var(--variant-dark);
}
.blue .accents {
  fill: var(--variant-highlight);
}
.blue .buttonText {
  color: var(--color-canvas-white);
}
.blue .outline {
  stroke: var(--color-charcoal);
}

.green {
  --variant-base: var(--color-green);
  --variant-light: var(--color-green-light);
  --variant-dark: var(--color-green-dark);
  --variant-highlight: var(--color-green-highlight);
}

.green .background {
  fill: var(--variant-base);
}
.green .leftEdge,
.green .rightEdge,
.green .topEdge {
  fill: var(--variant-light);
}
.green .bottomEdge {
  fill: var(--variant-dark);
}
.green .accents {
  fill: var(--variant-highlight);
}
.green .buttonText {
  color: var(--color-canvas-white);
}
.green .outline {
  stroke: var(--color-charcoal);
}

.red {
  --variant-base: var(--color-red);
  --variant-light: var(--color-red-light);
  --variant-dark: var(--color-red-dark);
  --variant-highlight: var(--color-red-highlight);
}

.red .background {
  fill: var(--variant-base);
}
.red .leftEdge,
.red .rightEdge,
.red .topEdge {
  fill: var(--variant-light);
}
.red .bottomEdge {
  fill: var(--variant-dark);
}
.red .accents {
  fill: var(--variant-highlight);
}
.red .buttonText {
  color: var(--color-canvas-white);
}
.red .outline {
  stroke: var(--color-charcoal);
}

.purple {
  --variant-base: var(--color-purple);
  --variant-light: var(--color-purple-light);
  --variant-dark: var(--color-purple-dark);
  --variant-highlight: var(--color-purple-highlight);
}

.purple .background {
  fill: var(--variant-base);
}
.purple .leftEdge,
.purple .rightEdge,
.purple .topEdge {
  fill: var(--variant-light);
}
.purple .bottomEdge {
  fill: var(--variant-dark);
}
.purple .accents {
  fill: var(--variant-highlight);
}
.purple .buttonText {
  color: var(--color-canvas-white);
}
.purple .outline {
  stroke: var(--color-charcoal);
}

.grey {
  --variant-base: var(--color-grey);
  --variant-light: var(--color-grey-light);
  --variant-dark: var(--color-grey-dark);
  --variant-highlight: var(--color-grey-highlight);
}

.grey .background {
  fill: var(--variant-base);
}
.grey .leftEdge,
.grey .rightEdge,
.grey .topEdge {
  fill: var(--variant-light);
}
.grey .bottomEdge {
  fill: var(--variant-dark);
}
.grey .accents {
  fill: var(--variant-highlight);
}
.grey .buttonText {
  color: var(--color-canvas-white);
}
.grey .outline {
  stroke: var(--color-charcoal);
}

.white {
  --variant-base: var(--color-white);
  --variant-light: var(--color-white-light);
  --variant-dark: var(--color-white-dark);
  --variant-highlight: var(--color-white-highlight);
}

.white .background {
  fill: var(--variant-base);
}
.white .leftEdge,
.white .rightEdge,
.white .topEdge {
  fill: var(--variant-light);
}
.white .bottomEdge {
  fill: var(--variant-dark);
}
.white .accents {
  fill: var(--variant-highlight);
}
.white .buttonText {
  color: var(--color-charcoal);
}
.white .outline {
  stroke: var(--color-charcoal);
}

.yellow {
  --variant-base: var(--color-yellow);
  --variant-light: var(--color-yellow-light);
  --variant-dark: var(--color-yellow-dark);
  --variant-highlight: var(--color-yellow-highlight);
}

.yellow .background {
  fill: var(--variant-base);
}
.yellow .leftEdge,
.yellow .rightEdge,
.yellow .topEdge {
  fill: var(--variant-light);
}
.yellow .bottomEdge {
  fill: var(--variant-dark);
}
.yellow .accents {
  fill: var(--variant-highlight);
}
.yellow .buttonText {
  color: var(--color-charcoal);
}
.yellow .outline {
  stroke: var(--color-charcoal);
}

/* Disabled state overrides */
.button.disabled .background,
.button.disabled .leftEdge,
.button.disabled .rightEdge,
.button.disabled .topEdge,
.button.disabled .bottomEdge,
.button.disabled .accents {
  fill: var(--color-stone-grey-dark);
}

.button.disabled .outline {
  stroke: var(--color-stone-grey);
}

/* Full width support */
.button.fullWidth {
  flex: 1;
  width: 100%;
  max-width: 100%;
  min-width: 0;
  overflow: hidden;
}
