.button {
  position: relative;
  border: none;
  background: transparent;
  padding: 0;
  cursor: pointer;
  display: inline-flex;
  align-items: center;
  justify-content: center;
  font-family: var(--font-button);
  font-size: var(--font-size-lg);
  font-weight: 700;
  text-transform: uppercase;
  line-height: 1.2;
  transition: opacity 0.15s ease-in-out;
  min-width: var(--button-width, 100px);
  height: var(--button-height, 50px);
  min-height: var(--button-height, 50px);
  
  /* Prevent touch/tap highlighting and selection */
  user-select: none;
  -webkit-user-select: none;
  -moz-user-select: none;
  -webkit-tap-highlight-color: transparent;
  -webkit-touch-callout: none;
  touch-action: manipulation;
}

.button.measuring {
  opacity: 0;
  pointer-events: none;
}

.buttonSvg {
  position: absolute;
  top: 0;
  left: 0;
  width: var(--button-width, 100px);
  height: var(--button-height, 50px);
  pointer-events: none;
  z-index: 0;
  user-select: none;
  overflow: visible;
}

.buttonText {
  position: relative;
  z-index: 1;
  padding: 0 6px;
  white-space: nowrap;
  text-shadow: 2px 2px 1px rgba(0, 0, 0, 0.5);
  line-height: 1;
  user-select: none;
}

/* Button States */
.button:hover:not(.disabled) {
  filter: brightness(1.1);
}

.button:active:not(.disabled) {
  filter: brightness(0.95);
}

.button:active:not(.disabled) .buttonText {
  transform: translate(1px, 1px);
}

.button:focus:not(.disabled) .outline {
  stroke: var(--color-glow-yellow);
}

/* Active state - invert gem lighting for pressed effect */
.button:active:not(.disabled) .leftEdge,
.button:active:not(.disabled) .rightEdge,
.button:active:not(.disabled) .topEdge {
  fill: var(--variant-dark);
}

.button:active:not(.disabled) .bottomEdge {
  fill: var(--variant-light);
}

.button.disabled {
  cursor: not-allowed;
  opacity: 0.7;
  filter: grayscale(0.5);
}

.button.disabled .buttonText {
  color: var(--color-stone-grey-light);
  text-shadow: 0 1px 0px rgba(255, 255, 255, 0.2);
}

/* Base SVG Element Styles */
.background,
.leftEdge,
.rightEdge,
.topEdge,
.bottomEdge,
.accents {
  stroke: none;
}

.outline {
  fill: none;
  stroke-width: 1;
  stroke-linecap: butt;
  stroke-linejoin: bevel;
  stroke-opacity: 1;
}

/* Variant Color Definitions */
.primary {
  --variant-base: var(--color-hex-amber);
  --variant-light: var(--color-hex-amber-light);
  --variant-dark: var(--color-hex-amber-dark);
  --variant-highlight: var(--color-hex-amber-highlight);
}

.primary .background { fill: var(--variant-base); }
.primary .leftEdge,
.primary .rightEdge,
.primary .topEdge { fill: var(--variant-light); }
.primary .bottomEdge { fill: var(--variant-dark); }
.primary .accents { fill: var(--variant-highlight); }
.primary .buttonText { color: var(--color-canvas-white); }
.primary .outline { stroke: var(--color-charcoal); }

.secondary {
  --variant-base: var(--color-pastel-sky);
  --variant-light: var(--color-pastel-sky-light);
  --variant-dark: var(--color-pastel-sky-dark);
  --variant-highlight: var(--color-pastel-sky-highlight);
}

.secondary .background { fill: var(--variant-base); }
.secondary .leftEdge,
.secondary .rightEdge,
.secondary .topEdge { fill: var(--variant-light); }
.secondary .bottomEdge { fill: var(--variant-dark); }
.secondary .accents { fill: var(--variant-highlight); }
.secondary .buttonText { color: var(--color-canvas-white); }
.secondary .outline { stroke: var(--color-charcoal); }

.green {
  --variant-base: var(--color-moss-green);
  --variant-light: var(--color-moss-green-light);
  --variant-dark: var(--color-moss-green-dark);
  --variant-highlight: var(--color-moss-green-highlight);
}

.green .background { fill: var(--variant-base); }
.green .leftEdge,
.green .rightEdge,
.green .topEdge { fill: var(--variant-light); }
.green .bottomEdge { fill: var(--variant-dark); }
.green .accents { fill: var(--variant-highlight); }
.green .buttonText { color: var(--color-canvas-white); }
.green .outline { stroke: var(--color-charcoal); }

.red {
  --variant-base: var(--color-clay-red);
  --variant-light: var(--color-clay-red-light);
  --variant-dark: var(--color-clay-red-dark);
  --variant-highlight: var(--color-clay-red-highlight);
}

.red .background { fill: var(--variant-base); }
.red .leftEdge,
.red .rightEdge,
.red .topEdge { fill: var(--variant-light); }
.red .bottomEdge { fill: var(--variant-dark); }
.red .accents { fill: var(--variant-highlight); }
.red .buttonText { color: var(--color-canvas-white); }
.red .outline { stroke: var(--color-charcoal); }

.purple {
  --variant-base: var(--color-deep-purple);
  --variant-light: var(--color-deep-purple-light);
  --variant-dark: var(--color-deep-purple-dark);
  --variant-highlight: var(--color-deep-purple-highlight);
}

.purple .background { fill: var(--variant-base); }
.purple .leftEdge,
.purple .rightEdge,
.purple .topEdge { fill: var(--variant-light); }
.purple .bottomEdge { fill: var(--variant-dark); }
.purple .accents { fill: var(--variant-highlight); }
.purple .buttonText { color: var(--color-canvas-white); }
.purple .outline { stroke: var(--color-charcoal); }

/* Disabled state overrides */
.button.disabled .background,
.button.disabled .leftEdge,
.button.disabled .rightEdge,
.button.disabled .topEdge,
.button.disabled .bottomEdge,
.button.disabled .accents {
  fill: var(--color-stone-grey-dark);
}

.button.disabled .outline {
  stroke: var(--color-stone-grey);
}

/* Full width support */
.button.fullWidth {
  flex: 1;
  width: 100%;
}

/* Icon variant - similar to secondary but square */
.icon {
  min-width: 50px;
  width: 50px !important;
  padding: 0;
  --variant-base: var(--color-pastel-sky);
  --variant-light: var(--color-pastel-sky-light);
  --variant-dark: var(--color-pastel-sky-dark);
  --variant-highlight: var(--color-pastel-sky-highlight);
}

.icon .background { fill: var(--variant-base); }
.icon .leftEdge,
.icon .rightEdge,
.icon .topEdge { fill: var(--variant-light); }
.icon .bottomEdge { fill: var(--variant-dark); }
.icon .accents { fill: var(--variant-highlight); }
.icon .buttonText { color: var(--color-canvas-white); }
.icon .outline { stroke: var(--color-charcoal); }



/* Link variant - minimal styling, no gem appearance */
.link {
  background: transparent;
  border: none;
  color: var(--color-hex-amber);
  text-decoration: underline;
  font-weight: normal;
  text-transform: none;
  padding: 0.5rem 1rem;
  min-width: auto;
  height: auto;
}

.link .buttonSvg {
  display: none;
}

.link .buttonText {
  text-shadow: none;
  color: var(--color-hex-amber);
  font-size: var(--font-size-md);
  font-weight: var(--font-weight-normal);
}

.link:hover:not(.disabled) {
  filter: none;
  color: var(--color-hex-amber-light);
}

.link:hover:not(.disabled) .buttonText {
  color: var(--color-hex-amber-light);
}

.link:active:not(.disabled) {
  filter: none;
  color: var(--color-hex-amber-dark);
}

.link:active:not(.disabled) .buttonText {
  color: var(--color-hex-amber-dark);
  transform: none;
} 