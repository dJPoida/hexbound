import { precacheAndRoute } from 'workbox-precaching';
import { registerRoute } from 'workbox-routing';
import { StaleWhileRevalidate } from 'workbox-strategies';

declare let self: ServiceWorkerGlobalScope;

// Precache all the assets generated by the build process.
// Their URLs are injected into the manifest variable below.
// This variable must be present in the service worker file.
precacheAndRoute(self.__WB_MANIFEST);

// Example of caching an API route
registerRoute(
  ({ url }) => url.pathname.startsWith('/api'),
  new StaleWhileRevalidate()
);

self.addEventListener('push', (event: PushEvent) => {
  if (!event.data) {
    console.error('Push event but no data');
    return;
  }
  
  const data = event.data.json();
  const title = data.title || 'Hexbound';
  const options = {
    body: data.body || 'You have a new notification.',
    icon: '/favicon/android-chrome-192x192.png', // Optional
    badge: '/favicon/favicon-32x32.png', // Optional
    data: data.data, // Attach custom data
  };

  event.waitUntil(self.registration.showNotification(title, options));
});

// Basic fetch handler
self.addEventListener('fetch', (event: FetchEvent) => {
  event.respondWith(
    caches.match(event.request).then((response) => {
      return response || fetch(event.request);
    })
  );
}); 